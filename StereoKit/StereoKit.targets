<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="$(MSBuildThisFileDirectory)SKAssets.targets" />
	<Import Project="$(MSBuildThisFileDirectory)SKShaders.targets" />
	<Import Project="$(MSBuildThisFileDirectory)SKMaui.targets" />

	<!-- Copy the package's native libraries into the project, for those
	     platforms that require it. -->
	<Target Name="StereoKit_Libraries" BeforeTargets="AfterBuild" AfterTargets="StereoKit_Properties" Condition="('$(OutputType)'!='Library' or '$(SKBuildPlatform)'=='Android') and '$(UseUwp)'!='true'">
		<Message Importance="high" Text="[StereoKit NuGet] Copying native libraries for .NET $(SKBuildNET) $(SKBuildPlatform)."/>
		<Message Importance="high" Condition= "'$(SKBuildPlatform)'=='Android'" Text="[StereoKit NuGet] Using the $(SKOpenXRLoader) &lt;SKOpenXRLoader&gt; version of the Android OpenXR loader."/>
		<Error Condition="'$(SKBuildPlatform)'=='Android' and '$(SKOpenXRLoader)'!='None' and !Exists('$(MSBuildThisFileDirectory)../android_openxr_loaders/$(SKOpenXRLoader.ToLower())/arm64/libopenxr_loader.so') and !Exists('$(MSBuildThisFileDirectory)../android_openxr_loaders/$(SKOpenXRLoader.ToLower())/x64/libopenxr_loader.so') and !Exists('$(SKOpenXRLoaderFolder)$(SKOpenXRLoader)/arm64/libopenxr_loader.so') and !Exists('$(SKOpenXRLoaderFolder)$(SKOpenXRLoader)/x64/libopenxr_loader.so')" Text="StereoKit could not find the Android OpenXR Loader indicated by &lt;SKOpenXRLoader&gt;! Please copy your platform specific libopenxr_loader.so file in this folder: $(SKOpenXRLoaderFolder)$(SKOpenXRLoader)/[x64|arm64]/" />

		<!-- The managed .pdb is not copied by default, so we copy it here to
		     enable debugging of the managed dll.-->
		<Copy
			SourceFiles        = "$(MSBuildThisFileDirectory)../lib/netstandard2.0/StereoKit.pdb"
			DestinationFolder  = "$(OutputPath)"
			SkipUnchangedFiles = "true"/>
		
		<ItemGroup Condition="'$(SKBuildPlatform)'=='Desktop'">
			<SKSourceFolder Include="$(MSBuildThisFileDirectory)../runtimes/linux-arm64/*.*" />
			<SKSourceFolder Include="$(MSBuildThisFileDirectory)../runtimes/linux-x64/*.*" />
			<SKSourceFolder Include="$(MSBuildThisFileDirectory)../runtimes/win-x64/*.*" />
		</ItemGroup>
		<Copy
			SourceFiles        = "@(SKSourceFolder)"
			DestinationFolder  = "$(BaseIntermediateOutputPath)lib/%(RecursiveDir)"
			SkipUnchangedFiles = "true"/>

		<!-- .NET Core 2.x behaves fine using the above for publishing, but
		     not for development. So! This is a manual copy that happens by
		     default on other versions of .Net Core.-->
		<Copy
			Condition          = "'$(SKBuildNET)'=='Core' and $(TargetFrameworkVersion.StartsWith('v2.'))"
			SourceFiles        = "@(SKSourceFolder)"
			DestinationFolder  = "$(OutputPath)runtimes/%(RecursiveDir)"
			SkipUnchangedFiles = "true"/>

		<!-- .NET Framework projects also seem to have the same issue. This
		     doesn't work for Publish, however. -->
		<Copy
			Condition          = "'$(SKBuildNET)'=='Framework'"
			SourceFiles        = "$(MSBuildThisFileDirectory)../runtimes/win-x64/native/StereoKitC.dll"
			DestinationFolder  = "$(OutputPath)"
			SkipUnchangedFiles = "true"/>

	</Target>

	<!-- Shenanigans to get UWP working here -->
	<Target Name="StereoKit_FixUWPBinaries" AfterTargets="ResolvePackageAssets" Condition="'$(UseUwp)'=='true'">
		<Message Importance="High" Text="[StereoKit NuGet] Replacing StereoKit Win32 binaries with UWP versions." />
		<!-- Immediately after package assets are picked, we insert ourselves and
		     swap out the incorrect Win32 binaries that .NET selects for the UWP
		     ones. .NET deprecated the RIDs necessary to distinguish properly
		     between UWP and Win32, perhaps there's a better mechanism here, but
		     this seems like it'll be alright. -->
		<ItemGroup>
			<NativeCopyLocalItems Remove="$([MSBuild]::NormalizePath('$(MSBuildThisFileDirectory)..\runtimes\win-$(Platform)\native\StereoKitC.dll'))"/>
			<NativeCopyLocalItems Remove="$([MSBuild]::NormalizePath('$(MSBuildThisFileDirectory)..\runtimes\win-$(Platform)\native\StereoKitC.pdb'))"/>
			<NativeCopyLocalItems
				Include   = "$([MSBuild]::NormalizePath('$(MSBuildThisFileDirectory)..\runtimes\win10-$(Platform)\nativeassets\uap10.0\StereoKitC.dll'))"
				AssetType = "native"
				CopyLocal = "true"/>
			<NativeCopyLocalItems
				Include   = "$([MSBuild]::NormalizePath('$(MSBuildThisFileDirectory)..\runtimes\win10-$(Platform)\nativeassets\uap10.0\StereoKitC.pdb'))"
				AssetType = "native"
				CopyLocal = "true"/>
		</ItemGroup>
	</Target>

	<!-- Link libraries directly in Xamarin and Maui Android projects. -->
	<ItemGroup>
		<AndroidNativeLibrary Abi="arm64-v8a" Include="$(MSBuildThisFileDirectory)../runtimes/android-arm64/native/libStereoKitC.so">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</AndroidNativeLibrary>
		<AndroidNativeLibrary Abi="x86_64" Include="$(MSBuildThisFileDirectory)../runtimes/x86_64/native/libStereoKitC.so">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</AndroidNativeLibrary>
		<AndroidNativeLibrary Condition="'$(SKOpenXRLoader)'!='None'" Abi="arm64-v8a" Include="$(MSBuildThisFileDirectory)../android_openxr_loaders/$(SKOpenXRLoader.ToLower())/arm64/*.so">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</AndroidNativeLibrary>
		<AndroidNativeLibrary Condition="'$(SKOpenXRLoader)'!='None'" Abi="x86_64" Include="$(MSBuildThisFileDirectory)../android_openxr_loaders/$(SKOpenXRLoader.ToLower())/x64/*.so">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</AndroidNativeLibrary>
		<AndroidNativeLibrary Condition="'$(SKOpenXRLoader)'!='None'" Abi="arm64-v8a" Include="$(SKOpenXRLoaderFolder)$(SKOpenXRLoader)/arm64/*.so">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</AndroidNativeLibrary>
		<AndroidNativeLibrary Condition="'$(SKOpenXRLoader)'!='None'" Abi="x86_64" Include="$(SKOpenXRLoaderFolder)$(SKOpenXRLoader)/x64/*.so">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</AndroidNativeLibrary>
	</ItemGroup>

</Project>